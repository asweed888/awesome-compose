#!/bin/bash

if [ ! -e ./.env ]; then
    cp -f .env.orig .env
fi

if [ ! -e ./compose.d/.dist ]; then
    mkdir ./compose.d/.dist
fi

. .env
for line in `cat .env | grep -v -e '^\s*#' -e '^\s*$'`; do
  eval "export $line"
done
NAMESPACES=(${NAMESPACES//:/ })

rm -f ./compose.d/.dist/*.yml

for namespace in ${NAMESPACES[@]}; do
    export namespace=$namespace
    ymls=''
    for file in `ls -1 ./compose.d/$namespace/*.yml`; do
        if [ -e ./compose.d/$namespace/.env ]; then
            . ./compose.d/$namespace/.env
            for line in `cat ./compose.d/$namespace/.env | grep -v -e '^\s*#' -e '^\s*$'`; do
              eval "export $line"
            done
        fi

        dist_path="./compose.d/.dist/${namespace}_${file##*/}"
        envsubst < $file > $dist_path
    done

    for file in `ls -1 ./compose.d/.dist/${namespace}_*.yml`; do
        ymls="-f $PWD/compose.d/.dist/${file##*/} $ymls"
    done

    COMPOSE_PROJECT_NAME=""
    eval "$(cat .env | grep '^COMPOSE_PROJECT_NAME')"
    if [ -z "$COMPOSE_PROJECT_NAME" ]; then
        export COMPOSE_PROJECT_NAME=$namespace
    else
        export COMPOSE_PROJECT_NAME="${COMPOSE_PROJECT_NAME}_$namespace"
    fi
    eval "docker-compose $ymls $@"
done
